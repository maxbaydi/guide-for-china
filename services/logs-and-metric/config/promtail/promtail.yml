server:
  http_listen_port: 9080
  grpc_listen_port: 0
  log_level: info

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # Конфигурация для сбора логов из Docker контейнеров
  - job_name: docker-containers
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
        filters:
          # Собираем логи только от контейнеров с label logging=enabled
          - name: label
            values: ["logging=enabled"]
    relabel_configs:
      # Извлекаем имя контейнера
      - source_labels: ['__meta_docker_container_name']
        target_label: 'container_name'
        regex: '/(.*)'
        replacement: '${1}'
      
      # Извлекаем имя образа
      - source_labels: ['__meta_docker_container_image']
        target_label: 'image_name'
      
      # Извлекаем дополнительные labels
      - source_labels: ['__meta_docker_container_label_logging_service']
        target_label: 'service'
      
      - source_labels: ['__meta_docker_container_label_logging_environment']
        target_label: 'environment'
        replacement: '${LOGGING_ENVIRONMENT:-unknown}'
      
      # Устанавливаем путь к логам контейнера
      - source_labels: ['__meta_docker_container_id']
        target_label: '__path__'
        replacement: '/var/lib/docker/containers/${1}/*log'
    
    pipeline_stages:
      # Парсинг JSON логов Docker
      - json:
          expressions:
            stream: stream
            attrs: attrs
            tag: attrs.tag
            time: time
            output: log
      
      # Извлечение метаданных из Docker tag
      - regex:
          expression: '(?P<image_name>(?:[^|]*[^|])).(?P<container_name>(?:[^|]*[^|])).(?P<image_id>(?:[^|]*[^|])).(?P<container_id>(?:[^|]*[^|]))'
          source: "tag"
      
      # Добавление labels
      - labels:
          tag:
          image_name:
          container_name:
          stream:
      
      # Парсинг структурированных логов (JSON)
      - json:
          expressions:
            level: level
            message: message
            timestamp: timestamp
            logger: logger
          source: "output"
      
      # Парсинг обычных логов
      - regex:
          expression: '(?P<timestamp>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(?:\.\d+)?(?:Z|[+-]\d{2}:\d{2})?)\s+(?P<level>\w+)\s+(?P<message>.*)'
          source: "output"
      
      # Добавление уровня логирования как label
      - labels:
          level:
      
      # Очистка временных полей
      - drop:
          expression: '.*'
          source: 'tag'
