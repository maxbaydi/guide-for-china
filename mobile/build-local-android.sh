#!/bin/bash

# –õ–æ–∫–∞–ª—å–Ω–∞—è —Å–±–æ—Ä–∫–∞ Android –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —á–µ—Ä–µ–∑ Gradle/Android Studio

set -e

echo ""
echo "üèóÔ∏è  –õ–æ–∫–∞–ª—å–Ω–∞—è —Å–±–æ—Ä–∫–∞ Android –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
echo ""
echo "üìã –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:"
echo "  - Android Studio —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
echo "  - Android SDK –Ω–∞—Å—Ç—Ä–æ–µ–Ω (ANDROID_HOME)"
echo "  - Java JDK 17 –∏–ª–∏ –≤—ã—à–µ"
echo "  - Node.js –∏ npm"
echo ""

cd mobile

# –ü—Ä–æ–≤–µ—Ä–∫–∞ ANDROID_HOME
if [ -z "$ANDROID_HOME" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: ANDROID_HOME –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    echo ""
    echo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è ANDROID_HOME:"
    echo "  –î–æ–±–∞–≤—å—Ç–µ –≤ ~/.bashrc –∏–ª–∏ ~/.zshrc:"
    echo "    export ANDROID_HOME=\$HOME/Android/Sdk"
    echo "    export PATH=\$PATH:\$ANDROID_HOME/emulator"
    echo "    export PATH=\$PATH:\$ANDROID_HOME/platform-tools"
    echo ""
    echo "  –ó–∞—Ç–µ–º –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: source ~/.bashrc (–∏–ª–∏ ~/.zshrc)"
    echo ""
    exit 1
fi

echo "‚úÖ ANDROID_HOME: $ANDROID_HOME"
echo ""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã—Ö Build Tools
cleanup_corrupted_build_tools() {
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ Build Tools..."
    
    local corrupted_found=false
    
    if [ -d "$ANDROID_HOME/build-tools" ]; then
        for version_dir in "$ANDROID_HOME/build-tools"/*; do
            if [ -d "$version_dir" ]; then
                version=$(basename "$version_dir")
                if [ ! -f "$version_dir/aapt" ] && [ ! -f "$version_dir/aapt.exe" ]; then
                    echo "‚ö†Ô∏è  Build Tools $version –ø–æ–≤—Ä–µ–∂–¥–µ–Ω—ã (–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç aapt)"
                    rm -rf "$version_dir"
                    echo "‚úÖ Build Tools $version —É–¥–∞–ª–µ–Ω—ã"
                    corrupted_found=true
                fi
            fi
        done
    fi
    
    if [ "$corrupted_found" = true ]; then
        echo "‚úÖ –ü–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã–µ Build Tools –æ—á–∏—â–µ–Ω—ã"
        echo ""
    fi
}

cleanup_corrupted_build_tools

echo ""

# –í—ã–±–æ—Ä –æ–∫—Ä—É–∂–µ–Ω–∏—è
echo "üìù –í—ã–±–µ—Ä–∏—Ç–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ:"
echo "  1. Development (–ª–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä 192.168.31.88)"
echo "  2. Production (—É–¥–∞–ª–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä mypns.com)"
echo ""
read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 1): " ENV_CHOICE
ENV_CHOICE=${ENV_CHOICE:-1}

if [ "$ENV_CHOICE" = "2" ]; then
    echo ""
    echo "üîÑ –í—Ä–µ–º–µ–Ω–Ω–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ Production URLs..."
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π .env
    if [ -f .env ]; then
        cp .env .env.backup
        echo "‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è .env"
    fi
    
    # –ö–æ–ø–∏—Ä—É–µ–º production –∫–æ–Ω—Ñ–∏–≥
    cp .env.production .env
    echo "‚úÖ –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è Production URLs:"
    echo "   - REST API: https://mypns.com/api/v1"
    echo "   - GraphQL: https://mypns.com/graphql"
    echo ""
else
    echo ""
    echo "üè† –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è Development URLs:"
    echo "   - REST API: http://192.168.31.88:4000/api/v1"
    echo "   - GraphQL: http://192.168.31.88:4002/graphql"
    echo ""
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Java
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Java..."
if ! command -v java &> /dev/null; then
    echo "‚ùå –û—à–∏–±–∫–∞: Java –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!"
    echo "   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ JDK 17 –∏–ª–∏ –≤—ã—à–µ"
    exit 1
fi
java -version
echo ""

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
npm install
echo ""

# –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–±–æ—Ä–æ–∫
echo "üßπ –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–±–æ—Ä–æ–∫..."
rm -rf android/app/build
rm -rf android/build
echo ""

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–∞—Ç–∏–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
echo "üîß –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–∞—Ç–∏–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
npx expo prebuild --platform android --clean
echo ""

# –í—ã–±–æ—Ä —Ç–∏–ø–∞ —Å–±–æ—Ä–∫–∏
echo "üìù –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Å–±–æ—Ä–∫–∏:"
echo "  1. Debug (–±—ã—Å—Ç—Ä–∞—è —Å–±–æ—Ä–∫–∞, —Å –æ—Ç–ª–∞–¥–∫–æ–π)"
echo "  2. Release (–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è, –¥–ª—è —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è)"
echo "  3. Bundle (AAB –¥–ª—è Google Play)"
echo ""
read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 2): " BUILD_TYPE
BUILD_TYPE=${BUILD_TYPE:-2}

case $BUILD_TYPE in
    1)
        echo ""
        echo "üî® –°–±–æ—Ä–∫–∞ Debug APK..."
        cd android
        ./gradlew assembleDebug
        cd ..
        echo ""
        echo "‚úÖ Debug APK —Å–æ–±—Ä–∞–Ω!"
        echo ""
        echo "üì± APK –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤:"
        echo "   android/app/build/outputs/apk/debug/app-debug.apk"
        echo ""
        APK_PATH="android/app/build/outputs/apk/debug/app-debug.apk"
        ;;
    3)
        echo ""
        echo "üî® –°–±–æ—Ä–∫–∞ Release Bundle (AAB)..."
        cd android
        ./gradlew bundleRelease
        cd ..
        echo ""
        echo "‚úÖ Release Bundle —Å–æ–±—Ä–∞–Ω!"
        echo ""
        echo "üì± AAB –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤:"
        echo "   android/app/build/outputs/bundle/release/app-release.aab"
        echo ""
        APK_PATH="android/app/build/outputs/bundle/release/app-release.aab"
        ;;
    *)
        echo ""
        echo "üî® –°–±–æ—Ä–∫–∞ Release APK..."
        cd android
        if ! ./gradlew assembleRelease; then
            echo ""
            echo "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏!"
            echo ""
            echo "üí° –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:"
            echo "  1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å Build Tools: rm -rf \$ANDROID_HOME/build-tools/*/aapt"
            echo "  2. –û—á–∏—Å—Ç–∏—Ç–µ –∫—ç—à Gradle: ./gradlew clean"
            echo "  3. –û–±–Ω–æ–≤–∏—Ç–µ SDK Manager —á–µ—Ä–µ–∑ Android Studio"
            echo ""
            exit 1
        fi
        cd ..
        echo ""
        echo "‚úÖ Release APK —Å–æ–±—Ä–∞–Ω!"
        echo ""
        echo "üì± APK –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤:"
        echo "   android/app/build/outputs/apk/release/app-release.apk"
        echo ""
        APK_PATH="android/app/build/outputs/apk/release/app-release.apk"
        
        if [ -f "$APK_PATH" ]; then
            SIZE=$(ls -lh "$APK_PATH" | awk '{print $5}')
            echo "üìã –†–∞–∑–º–µ—Ä APK: $SIZE"
        fi
        ;;
esac

echo ""
echo "üéâ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo ""
echo "üì± –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "  1. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ Android —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –∏–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —ç–º—É–ª—è—Ç–æ—Ä"
echo "  2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ APK: adb install $APK_PATH"
echo "  3. –ò–ª–∏ –ø–µ—Ä–µ—Ç–∞—â–∏—Ç–µ APK –Ω–∞ —ç–º—É–ª—è—Ç–æ—Ä"
echo ""
echo "üîç –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "  - –°–ø–∏—Å–æ–∫ —É—Å—Ç—Ä–æ–π—Å—Ç–≤: adb devices"
echo "  - –£—Å—Ç–∞–Ω–æ–≤–∫–∞: adb install -r $APK_PATH"
echo "  - –õ–æ–≥–∏: adb logcat | grep HanGuide"
echo "  - –ó–∞–ø—É—Å–∫: adb shell am start -n com.hanguide.app/.MainActivity"
echo ""

# –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º .env –µ—Å–ª–∏ –±—ã–ª backup
if [ -f .env.backup ]; then
    echo "üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ .env..."
    cp .env.backup .env
    rm .env.backup
    echo "‚úÖ –§–∞–π–ª .env –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    echo ""
fi

