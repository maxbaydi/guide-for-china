import { Platform } from 'react-native';
import Constants from 'expo-constants';

// –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —á–µ—Ä–µ–∑ expo-constants
const expoExtra = Constants.expoConfig?.extra || {};
const ENV_API_URL = expoExtra.apiBaseUrl;
const ENV_GRAPHQL_URL = expoExtra.graphqlUrl;

// –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ URL –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º
const getApiUrl = () => {
  // –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω URL –≤ .env - –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ (–¥–ª—è —Ä–µ–∞–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤)
  if (ENV_API_URL) {
    return ENV_API_URL;
  }
  
  if (__DEV__) {
    // –í —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ - fallback –∑–Ω–∞—á–µ–Ω–∏—è
    if (Platform.OS === 'android') {
      // Android —ç–º—É–ª—è—Ç–æ—Ä –∏—Å–ø–æ–ª—å–∑—É–µ—Ç 10.0.2.2 –¥–ª—è localhost
      return 'http://10.0.2.2:4000/api/v1';
    } else if (Platform.OS === 'ios') {
      // iOS —Å–∏–º—É–ª—è—Ç–æ—Ä –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å localhost
      return 'http://localhost:4000/api/v1';
    } else {
      // Web
      return 'http://localhost:4000/api/v1';
    }
  }
  // Production URL
  return 'https://api.hanguide.com/api/v1';
};

const getGraphQLUrl = () => {
  // –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω URL –≤ .env - –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
  if (ENV_GRAPHQL_URL) {
    return ENV_GRAPHQL_URL;
  }
  
  if (__DEV__) {
    if (Platform.OS === 'android') {
      return 'http://10.0.2.2:4002/graphql';
    } else if (Platform.OS === 'ios') {
      return 'http://localhost:4002/graphql';
    } else {
      return 'http://localhost:4002/graphql';
    }
  }
  return 'https://api.hanguide.com/graphql';
};

const baseUrl = getApiUrl();
const graphqlUrl = getGraphQLUrl();

// Debug logging
console.log('üîß API Configuration:');
console.log('  BASE_URL:', baseUrl);
console.log('  GRAPHQL_URL:', graphqlUrl);
console.log('  ENV_API_URL:', ENV_API_URL);
console.log('  ENV_GRAPHQL_URL:', ENV_GRAPHQL_URL);
console.log('  Platform:', Platform.OS);

export const API_CONFIG = {
  BASE_URL: baseUrl,
  GRAPHQL_URL: graphqlUrl,
  TIMEOUT: 60000, // 60 —Å–µ–∫—É–Ω–¥ (—É–≤–µ–ª–∏—á–µ–Ω–æ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ç–µ–∫—Å—Ç–∞)
};

export const APP_CONFIG = {
  DEFAULT_LANGUAGE: 'ru',
  SUPPORTED_LANGUAGES: ['ru', 'zh'],
  SEARCH_HISTORY_LIMIT: 10,
  SEARCH_DEBOUNCE_MS: 300,
};

